private List < Data > children ; @ XmlElement ( name = "data" ) <START_BUG> private KnowledgeElement nodeInfo ; <END_BUG> @ XmlElement private String icon ;
import org . eclipse . emf . ecore . EObject ; <START_BUG> import com . eclipsesource . modelserver . client . ModelServerClient ; <END_BUG> public final class ModelServerClientUtil { private static final String FORMAT = "xmi" ;
AbstractTransactionMapper < AccountMetadataTransactionDTO , AccountMetadataTransaction > { public AccountMetadataTransactionMapper ( JsonHelper jsonHelper ) { <START_BUG> super ( jsonHelper , TransactionType . ACCOUNT_METADATA_TRANSACTION , <END_BUG> AccountMetadataTransactionDTO . class ) ; }
for ( int i = 0 ; i < 32 ; i ++ ) { Ed25519GroupElement bij = bi ; <START_BUG> for ( int j = 0 ; j < 8 ; j ++ ) { <END_BUG> final Ed25519FieldElement inverse = bij . z . invert ( ) ; final Ed25519FieldElement xElement = bij . x . multiply ( inverse ) ; final Ed25519FieldElement yElement = bij . y . multiply ( inverse ) ;
AbstractTransactionMapper < MultisigAccountModificationTransactionDTO , MultisigAccountModificationTransaction > { public MultisigAccountModificationTransactionMapper ( JsonHelper jsonHelper ) { <START_BUG> super ( jsonHelper , TransactionType . MODIFY_MULTISIG_ACCOUNT , <END_BUG> MultisigAccountModificationTransactionDTO . class ) ; }
"C:/Program Files (x86)/Windows Application Driver/WinAppDriver" ) ; options . arg ( options . port + "" ) ; Command command = options . startProcess ( ) ; <START_BUG> String urlBase = "http://" + options . host + ":" + options . port ; <END_BUG> Http http = Http . forUrl ( options . driverLogger . getAppender ( ) , urlBase ) ; Map < String , Object > capabilities = options . newMapWithSelectedKeys ( map , "app" , "appArguments" , "appTopLevelWindow" , "appWorkingDir" ) ; String sessionId = http . path ( "session" )
AbstractTransactionMapper < NamespaceMetadataTransactionDTO , NamespaceMetadataTransaction > { public NamespaceMetadataTransactionMapper ( JsonHelper jsonHelper ) { <START_BUG> super ( jsonHelper , TransactionType . NAMESPACE_METADATA_TRANSACTION , <END_BUG> NamespaceMetadataTransactionDTO . class ) ; }
AbstractTransactionMapper < AccountMetadataTransactionDTO , AccountMetadataTransaction > { public AccountMetadataTransactionMapper ( JsonHelper jsonHelper ) { <START_BUG> super ( jsonHelper , TransactionType . ACCOUNT_METADATA_TRANSACTION , <END_BUG> AccountMetadataTransactionDTO . class ) ; }
